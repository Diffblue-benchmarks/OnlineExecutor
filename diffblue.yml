buildCmd: mvn -e -X -Dmaven.test.skip=true compile
testCmd: true
lineLength: 4096
skipVerification: true
cbmcArguments:
  # Do not generate coverage comments on generated tests.
  java-generate-no-comments: true
phases:
  -
  #Phase 0 PRETTY AND SIMPLE - Simple models, quick cover, pretty Tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # Instrument the file as opposed to the function only
      cover-only: file
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 1 PRETTY AND COMPLEX - Standard models, longer run time, pretty tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 2
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
  -
  #Phase 2 Simple and Private Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # If the logs contain output of the following then proceed to phase X
    nextPhase:
      # If the function is not analysable then do not pass onto the next phase
      not_analyzed: null
  -
  #Phase 3 Complex and Private Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 3000
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 3
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 4 EXCEPTIONS
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
  -
    #PHASE 5 Big numbers and less contraints on inputs 
    timeout: 300
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 100
      # Bound the length of input strings.
      max-nondet-string-length: 100
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 6
units:
#Target TGF: 73.0
# - methods: 31
# - complexity: 146
# - construction: 26.0
# - dependency: 13.0
  - target:
    - dir: target/classes
      file: org/olexec/execute/HackSystem.class
      sourceDir: src/main/java
      sourceFile: org/olexec/execute/HackSystem.java
#Target TGF: 12.6666666667
# - methods: 2
# - complexity: 18
# - construction: 2.0
# - dependency: 1.33333333333
  - target:
    - dir: target/classes
      file: org/olexec/execute/HotSwapClassLoader.class
      sourceDir: src/main/java
      sourceFile: org/olexec/execute/HotSwapClassLoader.java
#Target TGF: 225.066666667
# - methods: 32
# - complexity: 389
# - construction: 26.0
# - dependency: 17.3166666667
  - target:
    - dir: target/classes
      file: org/olexec/execute/HackPrintStream.class
      sourceDir: src/main/java
      sourceFile: org/olexec/execute/HackPrintStream.java
#Target TGF: 134.0
# - methods: 6
# - complexity: 172
# - construction: 6.0
# - dependency: 4.0
  - target:
    - dir: target/classes
      file: org/olexec/execute/ByteUtils.class
      sourceDir: src/main/java
      sourceFile: org/olexec/execute/ByteUtils.java
#Target TGF: 15.6363636364
# - methods: 3
# - complexity: 145
# - construction: 2.0
# - dependency: 0.590909090909
  - target:
    - dir: target/classes
      file: org/olexec/service/ExecuteStringSourceService.class
      sourceDir: src/main/java
      sourceFile: org/olexec/service/ExecuteStringSourceService.java
#Target TGF: 25.3333333333
# - methods: 3
# - complexity: 61
# - construction: 2.0
# - dependency: 0.833333333333
  - target:
    - dir: target/classes
      file: org/olexec/compile/StringSourceCompiler$TmpJavaFileManager.class
      sourceDir: src/main/java
      sourceFile: org/olexec/compile/StringSourceCompiler.java
#Target TGF: 13.2857142857
# - methods: 2
# - complexity: 78
# - construction: 2.0
# - dependency: 0.642857142857
  - target:
    - dir: target/classes
      file: org/olexec/execute/JavaClassExecutor.class
      sourceDir: src/main/java
      sourceFile: org/olexec/execute/JavaClassExecutor.java
#Target TGF: 695.316666667
# - methods: 103
# - complexity: 1924
# - construction: 57.3333333333
# - dependency: 33.4928571429
  - target:
    - dir: target/classes
      file: org/olexec/execute/HackScanner.class
      sourceDir: src/main/java
      sourceFile: org/olexec/execute/HackScanner.java
#Target TGF: 26.5
# - methods: 5
# - complexity: 79
# - construction: 5.0
# - dependency: 2.0
  - target:
    - dir: target/classes
      file: org/olexec/compile/StringSourceCompiler$TmpJavaFileObject.class
      sourceDir: src/main/java
      sourceFile: org/olexec/compile/StringSourceCompiler.java
#Target TGF: 57.5
# - methods: 4
# - complexity: 109
# - construction: 3.0
# - dependency: 2.0
  - target:
    - dir: target/classes
      file: org/olexec/execute/ClassModifier.class
      sourceDir: src/main/java
      sourceFile: org/olexec/execute/ClassModifier.java
dependenciesOnClasspath:
-
  source: classes
  classFile: org/olexec/execute/HackInputStream.class
-
  source: classes
  classFile: org/olexec/execute/HackSystem.class
-
  source: classes
  classFile: org/olexec/execute/ClassModifier.class
-
  source: classes
  classFile: org/olexec/compile/StringSourceCompiler.class
-
  source: classes
  classFile: org/olexec/execute/ByteUtils.class
-
  source: classes
  classFile: org/olexec/execute/HackPrintStream.class
-
  source: classes
  classFile: org/olexec/execute/HackScanner.class
-
  source: classes
  classFile: org/olexec/service/ExecuteStringSourceService$1.class
-
  source: classes
  classFile: org/olexec/execute/HackScanner$1.class
-
  source: classes
  classFile: org/olexec/execute/HotSwapClassLoader.class
-
  source: classes
  classFile: org/olexec/compile/StringSourceCompiler$TmpJavaFileObject.class